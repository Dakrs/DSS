/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentation;

import business.ConfiguraFacil;

import java.awt.*;
import java.awt.event.*;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.*;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle;
import javax.swing.event.*;
import javax.swing.table.*;

/**
 *
 * @author Pedro
 */

class Selection{

    DefaultTableModel model;
    int selected;

    public Selection(){
        this.model = new DefaultTableModel();
        this.selected = -1;
    }

    public Selection(DefaultTableModel model, int selected){
        this.model = model;
        this.selected = selected;
    }
}



public class ConfiguracaoFrame extends javax.swing.JFrame {

    Selection[] selections;
    ConfiguraFacil cf;

    private void registar_btnActionPerformed(ActionEvent e) {
        new RegistaEncomendaFrame().setVisible(true);
    }

    private void sair_btnActionPerformed(ActionEvent e) {
        this.dispose();
    }


    private void type_listValueChanged(ListSelectionEvent e) {

    }


    private DefaultTableModel createModel(List<Componente> list){
        DefaultTableModel r = new DefaultTableModel();
        Object row_data[] = new Object[3];

        r.setRowCount(0);

        // Adiciona novos
        for(Componente c : list){
            row_data[0] = c.getID();
            row_data[1] = c.getDesignacao();
            row_data[2] = c.getPreco();
            r.addRow(row_data);
        }

        return r;
    }

    private void createSelections(int tipo) throws Exception {
        List<Componente> componentes = this.cf.componenteDAO.list();

        List<Componente> comp_by_type = componentes.stream().filter(c -> c.getTipo() == tipo + 1).collect(Collectors.toList());

        DefaultTableModel model = createModel(comp_by_type);
        int selected = -1;

        Selection s = new Selection(model, selected);

        this.selections[tipo] = s;

    }


    private void loadSelection(int tipo){
        cmp_tbl.setModel(selections[tipo-1].model);
        cmp_tbl.setRowSelectionInterval(selections[tipo].selected, selections[tipo].selected);
    }

    /**
     * Creates new form ConfiguraFrame
     */
    public ConfiguracaoFrame(ConfiguraFacil cf) throws Exception {
        initComponents();
        this.cf = cf;
        this.selections = new Selection[6];
        for(int i = 0; i < 6; i++){
            createSelections(i);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    // Generated using JFormDesigner Evaluation license - Pedro Moreira
    private void initComponents() {
        sair_btn = new JButton();
        registar_btn = new JButton();
        jScrollPane1 = new JScrollPane();
        type_list = new JList<>();
        jScrollPane2 = new JScrollPane();
        cmp_tbl = new JTable();

        //======== this ========
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Configura\u00e7\u00e3o");
        Container contentPane = getContentPane();

        //---- sair_btn ----
        sair_btn.setText("Sair");
        sair_btn.addActionListener(e -> sair_btnActionPerformed(e));

        //---- registar_btn ----
        registar_btn.setText("Registar Encomenda");
        registar_btn.addActionListener(e -> registar_btnActionPerformed(e));

        //======== jScrollPane1 ========
        {

            //---- type_list ----
            type_list.setModel(new AbstractListModel<String>() {
                String[] values = {
                    "1 - Pintura",
                    "2 - Jantes",
                    "3 - Pneus",
                    "4 - Motoriza\u00e7\u00e3o",
                    "5 - Vidros",
                    "6 - Estofos"
                };
                @Override
                public int getSize() { return values.length; }
                @Override
                public String getElementAt(int i) { return values[i]; }
            });
            type_list.addListSelectionListener(e -> {
			type_listValueChanged(e);
		});
            jScrollPane1.setViewportView(type_list);
        }

        //======== jScrollPane2 ========
        {

            //---- cmp_tbl ----
            cmp_tbl.setModel(new DefaultTableModel(
                new Object[][] {
                    {null, null, null},
                    {null, null, null},
                },
                new String[] {
                    "ID", "Designa\u00e7\u00e3o", "Pre\u00e7o"
                }
            ) {
                boolean[] columnEditable = new boolean[] {
                    false, false, false
                };
                @Override
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return columnEditable[columnIndex];
                }
            });
            jScrollPane2.setViewportView(cmp_tbl);
        }

        GroupLayout contentPaneLayout = new GroupLayout(contentPane);
        contentPane.setLayout(contentPaneLayout);
        contentPaneLayout.setHorizontalGroup(
            contentPaneLayout.createParallelGroup()
                .addGroup(contentPaneLayout.createSequentialGroup()
                    .addGroup(contentPaneLayout.createParallelGroup()
                        .addGroup(contentPaneLayout.createSequentialGroup()
                            .addGap(24, 24, 24)
                            .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 109, GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, 221, GroupLayout.PREFERRED_SIZE))
                        .addGroup(contentPaneLayout.createSequentialGroup()
                            .addGap(0, 6, Short.MAX_VALUE)
                            .addComponent(sair_btn)
                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 174, Short.MAX_VALUE)
                            .addComponent(registar_btn)))
                    .addContainerGap())
        );
        contentPaneLayout.setVerticalGroup(
            contentPaneLayout.createParallelGroup()
                .addGroup(GroupLayout.Alignment.TRAILING, contentPaneLayout.createSequentialGroup()
                    .addGap(25, 25, 25)
                    .addGroup(contentPaneLayout.createParallelGroup()
                        .addComponent(jScrollPane2, GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE))
                    .addGap(123, 123, 123)
                    .addGroup(contentPaneLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                        .addComponent(registar_btn)
                        .addComponent(sair_btn))
                    .addContainerGap())
        );
        pack();
        setLocationRelativeTo(getOwner());
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // Generated using JFormDesigner Evaluation license - Pedro Moreira
    private JButton sair_btn;
    private JButton registar_btn;
    private JScrollPane jScrollPane1;
    private JList<String> type_list;
    private JScrollPane jScrollPane2;
    private JTable cmp_tbl;
    // End of variables declaration//GEN-END:variables
}
